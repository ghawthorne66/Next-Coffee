import Head from "next/head"
import React, { useEffect } from "react"
import Banner from "../components/banner"
import Card from "../components/card"
import Image from "next/image"
import { fetchCoffeeStores } from "../lib/coffee-stores"
import useTrackLocation from "../hooks/use-track-location"
import styles from "../styles/Home.module.css"

export async function getStaticProps(context) {
  const coffeeStores = await fetchCoffeeStores()
  return {
    props: {
      coffeeStores,
    },
  }
}

export default function Home(props) {

  const { handleTrackLocation, latLong, locationErrorMsg, isFindingLocation } = useTrackLocation()

  console.log({ latLong, locationErrorMsg })

  useEffect(async () => {
    if(latLong) {
      try {
        const fetchedCoffeeStores = await fetchCoffeeStores(latLong)
        console.log({fetchedCoffeeStores})
      } catch (error) {
        console.log(error)
      }
    }
  }, [latLong]);

  const handleOnBannerBtnClick = () => console.log("Hi from banner button")

  useEffect(async(isFindingLocation) => {
    const fetchTrackLocation = await handleTrackLocation(isFindingLocation)
    console.log({fetchTrackLocation})

  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isFindingLocation ? "Locating..." : "View stores nearby"}
          handleOnClick={handleOnBannerBtnClick}
        />
      {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400} />
        </div>

        {props.coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Andorra Restaurants</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((coffeeStore) => {
                return (
                  <Card
                    key={coffeeStore.id}
                    name={coffeeStore.name}
                    imgUrl={
                      coffeeStore.imgUrl ||
                      "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
                    }
                    href={`/coffee-store/${coffeeStore.id}`}
                  />
                )
              })}
            </div>
          </div>
        )}
      </main>
    </div>
  )
}
